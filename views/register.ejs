<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <link rel="stylesheet" href="output.css">
</head>
<body class="flex justify-center bg-gray-200">
    <div class="w-2/3 p-8 border-spacing-6 shadow-xl rounded-2xl m-16 bg-white">
        <h2 class="text-center text-3xl font-bold p-4">Register Here!</h2>
        
        <!-- Success Alert -->
        <div id="successAlert" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Success!</strong>
            <span class="block sm:inline">You have registered successfully.</span>
            <span id="closeAlert" class="absolute top-0 bottom-0 right-0 px-4 py-3 cursor-pointer">
                <svg class="fill-current h-6 w-6 text-green-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                    <title>Close</title>
                    <path d="M14.348 5.652a1 1 0 010 1.415L11.415 10l2.933 2.933a1 1 0 01-1.415 1.415L10 11.415l-2.933 2.933a1 1 0 01-1.415-1.415L8.585 10 5.652 7.067a1 1 0 011.415-1.415L10 8.585l2.933-2.933a1 1 0 011.415 0z"/>
                </svg>
            </span>
        </div>

        <form action="/register" method="POST" id="registerForm">
            <div class="flex flex-col">
                <label for="name" class="text-2xl py-4">Name:</label>
                <input type="text" id="name" name="name" class="border-black shadow-lg h-10 rounded-lg" required>
                <small class="text-red-500 hidden" id="nameError">Name must be at least 3 characters long.</small>
            </div>
            <div class="flex flex-col">
                <label for="email" class="text-2xl py-4">Email:</label>
                <input type="email" id="email" name="email" class="border-black shadow-lg h-10 rounded-lg" required>
                <small class="text-red-500 hidden" id="emailError">Enter a valid email address.</small>
            </div>
            <div class="flex flex-col">
                <label for="password" class="text-2xl py-4">Password:</label>
                <input type="password" id="password" name="password" class="border-black shadow-lg h-10 rounded-lg" required>
                <small class="text-red-500 hidden" id="passwordError">Password must be at least 6 characters long.</small>
            </div>
            <button type="submit" class="bg-blue-400 h-10 text-center my-5 w-16 rounded-xl">Register</button>
        </form>
        <div class="flex">
            <p class="text-xl">Already have an account?</p>
            <button class="mx-4 bg-blue-400 h-10 text-center w-28 rounded-xl"><a href="/">Login here</a></button>
        </div>
    </div>

    <script>
        // Get form, input fields, and alert elements
        const form = document.getElementById('registerForm');
        const nameInput = document.getElementById('name');
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');

        // Error elements
        const nameError = document.getElementById('nameError');
        const emailError = document.getElementById('emailError');
        const passwordError = document.getElementById('passwordError');

        // Success alert elements
        const successAlert = document.getElementById('successAlert');
        const closeAlert = document.getElementById('closeAlert');

        form.addEventListener('submit', function (e) {
            let isValid = true;

            // Name validation
            if (nameInput.value.trim().length < 3) {
                nameError.classList.remove('hidden');
                isValid = false;
            } else {
                nameError.classList.add('hidden');
            }

            // Email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(emailInput.value.trim())) {
                emailError.classList.remove('hidden');
                isValid = false;
            } else {
                emailError.classList.add('hidden');
            }

            // Password validation
            if (passwordInput.value.trim().length < 6) {
                passwordError.classList.remove('hidden');
                isValid = false;
            } else {
                passwordError.classList.add('hidden');
            }

            // Prevent form submission if validation fails
            if (!isValid) {
                e.preventDefault();
            } else {
                // Show success alert
                successAlert.classList.remove('hidden');

                // Hide the alert after 5 seconds
                setTimeout(() => {
                    successAlert.classList.add('hidden');
                }, 5000);

                // Uncomment this when connecting to a real backend
                // e.preventDefault();
            }
        });

        // Close alert manually
        closeAlert.addEventListener('click', function () {
            successAlert.classList.add('hidden');
        });
    </script>
</body>
</html>
